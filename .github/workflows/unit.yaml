name: PHP Unit Tests

on:
  push:
    branches: [ dev, master ]
  pull_request:
    types: [ opened, reopened, synchronize ]

jobs:
  php-file-changed:
    runs-on: ubuntu-latest
    outputs:
      php: ${{ steps.filter.outputs.php }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            php:
              - '**/*.php'
              - 'composer.json'
              - 'composer.lock'
              - 'phpunit.xml'

  test:
    needs: php-file-changed
    if: ${{ needs.php-file-changed.outputs.php == 'true' }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-version: ['8.2', '8.3', '8.4']
        
    name: PHP ${{ matrix.php-version }}
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_DATABASE: sspanel_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
          
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=3
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, mysql, redis, bcmath, curl, fileinfo, json, openssl, pdo, posix, yaml, zip
          coverage: pcov
          tools: composer:v2
          
      - name: Get composer cache directory
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
        
      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-
          
      - name: Install dependencies
        run: composer install --no-interaction --no-progress --prefer-dist --optimize-autoloader
        
      - name: Run tests with coverage
        run: vendor/bin/phpunit --coverage-clover coverage.xml
        env:
          DB_HOST: 127.0.0.1
          DB_DATABASE: sspanel_test
          DB_USERNAME: root
          DB_PASSWORD: ''
          REDIS_HOST: 127.0.0.1
          REDIS_PORT: 6379
          
      - name: Upload coverage to Codecov
        if: matrix.php-version == '8.3'
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml
          fail_ci_if_error: false